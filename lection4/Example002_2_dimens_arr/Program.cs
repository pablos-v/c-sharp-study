
// ## Двумерные массивы
// 48. Показать двумерный массив размером m×n заполненный целыми числами

// (int m, int n) Len() // задать массив
// {
//     while (true)
//     {
//         Console.WriteLine("Введите количество строк и столбцов массива через запятую или пробел: ");
//         string[] enter = Console.ReadLine().Split(',', ' ');
//         if (enter.Length == 2 && int.TryParse(enter[0], out int m) && 
//         int.TryParse(enter[1], out int n)) return (m,n);
//         else Console.WriteLine("Что-то вы не то ввели, давайте-ка снова.");
//     }
// }

// int[,] RandArray((int m, int n) mn)
// {
//     int[,] array = new int[mn.m, mn.n];
//     for (int i = 0; i < mn.m; i++)
//     {
//         for (int j = 0; j < mn.n; j++)
//         {
//             array[i, j] = new Random().Next(-9, 10);
//         }
//     }
//     return array;
// }

// void PrintArray(int[,] arr)
// {
//     for (int i = 0; i < arr.GetLength(0); i++)
//     {
//         for (int j = 0; j < arr.GetLength(1); j++)
//         {
//             Console.Write(arr[i, j] + " ");
//         }
//         Console.WriteLine();
//     }
// }

// PrintArray(RandArray(Len()));

// 49. Показать двумерный массив размером m×n заполненный вещественными числами

// (int m, int n) Len() // задать массив
// {
//     while (true)
//     {
//         Console.WriteLine("Введите количество строк и столбцов массива через запятую или пробел: ");
//         string[] enter = Console.ReadLine().Split(',', ' ');
//         if (enter.Length == 2 && int.TryParse(enter[0], out int m) && 
//         int.TryParse(enter[1], out int n)) return (m,n);
//         else Console.WriteLine("Что-то вы не то ввели, давайте-ка снова.");
//     }
// }

// double[,] RandArray((int m, int n) mn)
// {
//     double[,] array = new double[mn.m, mn.n];
//     for (int i = 0; i < mn.m; i++)
//     {
//         for (int j = 0; j < mn.n; j++)
//         {
//             array[i, j] = Math.Round((new Random().NextDouble() * 100),2);
//         }
//     }
//     return array;
// }

// void PrintArray(double[,] arr)
// {
//     for (int i = 0; i < arr.GetLength(0); i++)
//     {
//         for (int j = 0; j < arr.GetLength(1); j++)
//         {
//             Console.Write(arr[i, j] + " ");
//         }
//         Console.WriteLine();
//     }
// }

// PrintArray(RandArray(Len()));

// 50. В двумерном массиве n×k заменить четные элементы на противоположные



// 51. Задать двумерный массив следующим правилом: Aₘₙ = m+n
// 52. В двумерном массиве заменить элементы, у которых оба индекса чётные на их квадраты
// 53. В двумерном массиве показать позиции числа, заданного пользователем или указать, что такого элемента нет
// 54. В матрице чисел найти сумму элементов главной диагонали
// 55. Дан целочисленный массив. Найти среднее арифметическое каждого из столбцов.
// 56. Написать программу, которая обменивает элементы первой строки и последней строки
// 57. Написать программу, упорядочивания по убыванию элементы каждой строки двумерной массива.
// 58. Написать программу, которая в двумерном массиве заменяет строки на столбцы или сообщить
// 59. В прямоугольной матрице найти строку с наименьшей суммой элементов.
// 60. Составить частотный словарь элементов двумерного массива
// 61. Найти произведение двух матриц
// 62. В двумерном массиве целых чисел. Удалить строку и столбец, на пересечении которых расположен наименьший элемент.
// 63. Сформировать трехмерный массив не повторяющимися двузначными числами показать его построчно на экран выводя индексы соответствующего элемента
// 64. Показать треугольник Паскаля
// *Сделать вывод в виде равнобедренного треугольника
// 65. Спирально заполнить двумерный массив:
// ```
//   1  2  3  4
//  12 13 14  5
//  11 16 15  6
//  10  9  8  7 

